version: '3.8'

# ===============================================
# n8n Docker Compose Configuration
# Minimal setup: n8n + PostgreSQL + Redis + Workers
# ===============================================

services:
  # ==================
  # PostgreSQL Database
  # ==================
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - n8n-network

  # ==================
  # Redis (Queue Mode)
  # ==================
  redis:
    image: redis:7-alpine
    container_name: n8n-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - n8n-network

  # ==================
  # n8n Main Instance
  # ==================
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Core configuration
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - NODE_ENV=production
      - WEBHOOK_URL=${WEBHOOK_URL}

      # Database configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}

      # Queue configuration
      - EXECUTIONS_MODE=${EXECUTIONS_MODE}
      - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
      - QUEUE_BULL_REDIS_PORT=${QUEUE_BULL_REDIS_PORT}
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_HEALTH_CHECK_ACTIVE=true

      # Performance
      - NODE_OPTIONS=${NODE_OPTIONS}

      # Data management
      - EXECUTIONS_DATA_SAVE_ON_ERROR=${EXECUTIONS_DATA_SAVE_ON_ERROR}
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=${EXECUTIONS_DATA_SAVE_ON_SUCCESS}
      - EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=${EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS:-true}
      - EXECUTIONS_DATA_PRUNE=${EXECUTIONS_DATA_PRUNE}
      - EXECUTIONS_DATA_MAX_AGE=${EXECUTIONS_DATA_MAX_AGE}

      # Timezone
      - TZ=${TZ}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./files:/files  # Local file access
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-network

  # ==================
  # n8n Worker 1
  # ==================
  n8n-worker-1:
    image: n8nio/n8n:latest
    container_name: n8n-worker-1
    restart: unless-stopped
    command: worker
    environment:
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
      - QUEUE_BULL_REDIS_PORT=${QUEUE_BULL_REDIS_PORT}
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - NODE_OPTIONS=${NODE_OPTIONS}
      - TZ=${TZ}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./files:/files
    depends_on:
      - postgres
      - redis
      - n8n
    networks:
      - n8n-network

  # ==================
  # n8n Worker 2 (Optional - uncomment if needed)
  # ==================
  # n8n-worker-2:
  #   image: n8nio/n8n:latest
  #   container_name: n8n-worker-2
  #   restart: unless-stopped
  #   command: worker
  #   environment:
  #     - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
  #     - DB_TYPE=postgresdb
  #     - DB_POSTGRESDB_HOST=postgres
  #     - DB_POSTGRESDB_PORT=5432
  #     - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
  #     - DB_POSTGRESDB_USER=${POSTGRES_USER}
  #     - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
  #     - EXECUTIONS_MODE=queue
  #     - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
  #     - QUEUE_BULL_REDIS_PORT=${QUEUE_BULL_REDIS_PORT}
  #     - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
  #     - NODE_OPTIONS=${NODE_OPTIONS}
  #     - TZ=${TZ}
  #   volumes:
  #     - n8n_data:/home/node/.n8n
  #     - ./files:/files
  #   depends_on:
  #     - postgres
  #     - redis
  #     - n8n
  #   networks:
  #     - n8n-network

# ==================
# Docker Networks
# ==================
networks:
  n8n-network:
    driver: bridge

# ==================
# Docker Volumes
# ==================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local